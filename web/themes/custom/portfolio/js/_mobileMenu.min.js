class MobileMenu {
  constructor(menu) {
    this.originalMenu = document.querySelector(menu);
    this.cloneMenu();
    this.renderClonedMenu();
    this.renderSocial();
  }

  cloneMenu() {
    this.mobileMenu = this.originalMenu.cloneNode(true);
  }

  renderClonedMenu() {
    const body = document.querySelector("body");
    this.mobileMenu.classList.add("mobile-nav");
    const button = this.createHtmlElement("div", "nav-hamburger");
    const burgerInner = this.createHtmlElement("div", "burger-inner");
    const burgerSpanTop = this.createHtmlElement("span", "topbar");
    const burgerSpanBtm = this.createHtmlElement("span", "btmbar");
    burgerInner.innerHTML += burgerSpanTop.outerHTML + burgerSpanBtm.outerHTML;
    button.appendChild(burgerInner);
    this.mobileMenu.insertBefore(button, this.mobileMenu.firstChild);
    body.appendChild(this.mobileMenu);
    this.addArrowToExpandedItem();
    this.signNavButtons();
  }

  addArrowToExpandedItem() {
    const ExpandedMenuItems = document.querySelectorAll(
      ".mobile-nav .menu-item--expanded"
    );
    ExpandedMenuItems.forEach((el) => {
      const button = this.createHtmlElement("div", "nav-btt");
      const navInner = this.createHtmlElement("div", "nav-inner");
      button.appendChild(navInner);
      const link = el.children[0];
      link.parentNode.insertBefore(button, link.nextSibling);
    });
  }

  createHtmlElement(type, customClass) {
    const element = document.createElement(type);
    element.classList.add(customClass);
    return element;
  }

  signNavButtons() {
    const navButtons = document.querySelectorAll(".nav-btt");
    const hamburger = document.querySelector(".nav-hamburger");
    hamburger.addEventListener("click", () => {
      if (this.mobileMenu.classList.contains("active")) {
        const activeMenus = document.querySelectorAll(".menu.active");
        activeMenus.forEach(function (el) {
          el.style.maxHeight = 0 + "px";
          el.classList.remove("active");
        });
      }
      this.mobileMenu.classList.toggle("active");
      if (this.mobileMenu.classList.contains("active-with-social")) {
        this.mobileMenu.classList.remove("active-with-social");
      } else {
        setTimeout(() => {
          this.mobileMenu.classList.add("active-with-social");
        }, 300);
      }
    });
    navButtons.forEach(function (el) {
      el.addEventListener("click", () => {
        const closestMenu = el.nextElementSibling;
        const previousMenu = el.parentNode.parentNode;
        if (closestMenu.classList.contains("active")) {
          closestMenu.classList.remove("active");
          closestMenu.style.maxHeight = 0 + "px";
        } else {
          closestMenu.classList.add("active");
          closestMenu.style.maxHeight = closestMenu.scrollHeight + "px";
          previousMenu.style.maxHeight =
            closestMenu.scrollHeight + previousMenu.scrollHeight + "px";
        }
      });
    });
  }

  renderSocial() {
    const socialWrapper = document.querySelector(".social-wrapper");
    this.socialWrapper = socialWrapper.cloneNode(true);
    this.mobileMenu.appendChild(this.socialWrapper);
  }
}
